(function() {var implementors = {};
implementors["avmath"] = [{"text":"impl !RefUnwindSafe for Layer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GeometricAltitude","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GeopotentialAltitude","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for PressureAltitude","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DensityAltitude","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AltimeterSetting","synthetic":true,"types":[]}];
implementors["gauge_sys"] = [{"text":"impl RefUnwindSafe for FsContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawServiceId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GaugeDrawData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawUnit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawAircraftVariable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawNamedVariable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ServiceId","synthetic":true,"types":[]}];
implementors["simconnect_sys"] = [{"text":"impl RefUnwindSafe for SimConnect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataDefinition","synthetic":true,"types":[]},{"text":"impl&lt;Group&gt; RefUnwindSafe for NotificationGroupDefinition&lt;Group&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Group: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;EventType&gt; RefUnwindSafe for EventDefinition&lt;EventType&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EventType: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReceiveHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReceiveOpen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReceiveEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawDataDefinitionId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawObjectId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawNotificationGroupId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawEventId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NotificationGroupPriority","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawDataSetFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawMessageType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawDataType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SimConnectHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Handle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataSetFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataType","synthetic":true,"types":[]}];
implementors["wt_cj4"] = [{"text":"impl !RefUnwindSafe for FadecController","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThrottleAxis","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThrustValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThrottlePercent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThrottleMode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for EngineData&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EngineNumber","synthetic":true,"types":[]}];
implementors["wt_flight_recorder"] = [{"text":"impl !RefUnwindSafe for FlightDataRecorder","synthetic":true,"types":[]}];
implementors["wt_systems"] = [{"text":"impl&lt;In&gt; !RefUnwindSafe for PidConfiguration&lt;In&gt;","synthetic":true,"types":[]},{"text":"impl&lt;In&gt; !RefUnwindSafe for PidController&lt;In&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()