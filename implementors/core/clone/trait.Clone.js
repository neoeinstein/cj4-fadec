(function() {var implementors = {};
implementors["avmath"] = [{"text":"impl Clone for Layer","synthetic":false,"types":[]},{"text":"impl Clone for GeometricAltitude","synthetic":false,"types":[]},{"text":"impl Clone for GeopotentialAltitude","synthetic":false,"types":[]},{"text":"impl Clone for PressureAltitude","synthetic":false,"types":[]},{"text":"impl Clone for DensityAltitude","synthetic":false,"types":[]},{"text":"impl Clone for AltimeterSetting","synthetic":false,"types":[]}];
implementors["gauge_sys"] = [{"text":"impl Clone for FsContext","synthetic":false,"types":[]},{"text":"impl Clone for RawServiceId","synthetic":false,"types":[]},{"text":"impl Clone for ServiceId","synthetic":false,"types":[]},{"text":"impl Clone for GaugeDrawData","synthetic":false,"types":[]},{"text":"impl Clone for RawUnit","synthetic":false,"types":[]},{"text":"impl Clone for RawAircraftVariable","synthetic":false,"types":[]},{"text":"impl Clone for RawNamedVariable","synthetic":false,"types":[]}];
implementors["simconnect_sys"] = [{"text":"impl Clone for ReceiveHeader","synthetic":false,"types":[]},{"text":"impl Clone for ReceiveOpen","synthetic":false,"types":[]},{"text":"impl Clone for Version","synthetic":false,"types":[]},{"text":"impl Clone for ReceiveEvent","synthetic":false,"types":[]},{"text":"impl Clone for RawDataDefinitionId","synthetic":false,"types":[]},{"text":"impl Clone for RawObjectId","synthetic":false,"types":[]},{"text":"impl Clone for RawNotificationGroupId","synthetic":false,"types":[]},{"text":"impl Clone for RawEventId","synthetic":false,"types":[]},{"text":"impl Clone for NotificationGroupPriority","synthetic":false,"types":[]},{"text":"impl Clone for RawDataSetFlag","synthetic":false,"types":[]},{"text":"impl Clone for DataSetFlag","synthetic":false,"types":[]},{"text":"impl Clone for RawMessageType","synthetic":false,"types":[]},{"text":"impl Clone for MessageType","synthetic":false,"types":[]},{"text":"impl Clone for RawDataType","synthetic":false,"types":[]},{"text":"impl Clone for DataType","synthetic":false,"types":[]},{"text":"impl Clone for SimConnectHandle","synthetic":false,"types":[]},{"text":"impl Clone for Handle","synthetic":false,"types":[]},{"text":"impl Clone for WindowHandle","synthetic":false,"types":[]},{"text":"impl Clone for HResult","synthetic":false,"types":[]}];
implementors["wt_cj4"] = [{"text":"impl Clone for ThrottleMode","synthetic":false,"types":[]},{"text":"impl Clone for ThrottleAxis","synthetic":false,"types":[]},{"text":"impl Clone for ThrustValue","synthetic":false,"types":[]},{"text":"impl Clone for ThrottlePercent","synthetic":false,"types":[]},{"text":"impl Clone for EngineNumber","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for EngineData&lt;T&gt;","synthetic":false,"types":[]}];
implementors["wt_systems"] = [{"text":"impl&lt;In&gt; Clone for PidConfiguration&lt;In&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;In: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ratio: Div&lt;In&gt; + Div&lt;&lt;Time as Mul&lt;In&gt;&gt;::Output&gt; + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;Time: Mul&lt;In&gt; + Div&lt;In&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Ratio as Div&lt;In&gt;&gt;::Output: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Ratio as Div&lt;&lt;Time as Mul&lt;In&gt;&gt;::Output&gt;&gt;::Output: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Time as Div&lt;In&gt;&gt;::Output: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;In&gt; Clone for PidController&lt;In&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;In: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ratio: Div&lt;In&gt; + Div&lt;&lt;Time as Mul&lt;In&gt;&gt;::Output&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Time: Mul&lt;In&gt; + Div&lt;In&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Time as Mul&lt;In&gt;&gt;::Output: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()